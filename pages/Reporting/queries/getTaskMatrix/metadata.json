{
  "gitSyncId": "685e483118280a5cf36d2a8a_fd842603-31e3-4515-9778-b056ec7a2634",
  "id": "Reporting_getTaskMatrix",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "WITH task_colors AS (\n  -- ✅ EINFACHE FARBBERECHNUNG\n  SELECT DISTINCT\n    t.id as task_id,\n    t.name as task_name,\n    \n    -- Hintergrundfarbe direkt aus Tabelle\n    COALESCE(t.color, '#E8F4FD') as background_color,\n    \n    -- ✅ TEXTFARBE basierend auf Hintergrundfarbe berechnen\n    CASE \n      WHEN t.color IS NULL THEN '#2D3748'\n      WHEN LENGTH(t.color) != 7 OR SUBSTRING(t.color, 1, 1) != '#' THEN '#2D3748'\n      ELSE\n        CASE \n          -- Helligkeit der Hintergrundfarbe berechnen (Luminance-Formel)\n          WHEN (\n            (('x' || SUBSTRING(t.color, 2, 2))::bit(8)::INTEGER * 299) +\n            (('x' || SUBSTRING(t.color, 4, 2))::bit(8)::INTEGER * 587) +\n            (('x' || SUBSTRING(t.color, 6, 2))::bit(8)::INTEGER * 114)\n          ) / 1000 > 180 THEN '#1A202C'  -- Sehr dunkler Text für sehr helle Farben\n          WHEN (\n            (('x' || SUBSTRING(t.color, 2, 2))::bit(8)::INTEGER * 299) +\n            (('x' || SUBSTRING(t.color, 4, 2))::bit(8)::INTEGER * 587) +\n            (('x' || SUBSTRING(t.color, 6, 2))::bit(8)::INTEGER * 114)\n          ) / 1000 > 140 THEN '#2D3748'  -- Dunkler Text für helle Farben\n          -- Für mittlere Farben (wie Violett) → Weißer Text für besseren Kontrast\n          ELSE '#FFFFFF'  -- Weißer Text für dunkle und mittlere Farben\n        END\n    END as text_color\n    \n  FROM tasks t\n  WHERE t.name IS NOT NULL\n),\n\ntask_assignments AS (\n  -- Alle Task-Zuweisungen mit Mitarbeiter-Informationen\n  SELECT \n    s.day_abbrev,\n    s.task_id,\n    s.employee_id,\n    s.start_time,\n    s.end_time,\n    s.room_id,\n    t.name as task_name,\n    e.name as employee_name,\n    r.name as room_name,\n    -- Kombinierter Mitarbeiter-Text mit Zeitinfo\n    CASE \n      WHEN e.name IS NOT NULL THEN \n        e.name || ' (' || \n        to_char(s.start_time, 'HH24:MI') || '-' || \n        to_char(s.end_time, 'HH24:MI') || ')'\n      ELSE \n        'Unbesetzt'\n    END as employee_with_time,\n    -- Dauer in Minuten berechnen\n    EXTRACT(EPOCH FROM (s.end_time - s.start_time)) / 60 as duration_minutes\n    \n  FROM schedule s\n  LEFT JOIN tasks t ON s.task_id = t.id\n  LEFT JOIN employees e ON s.employee_id = e.id\n  LEFT JOIN rooms r ON s.room_id = r.id\n  WHERE t.name IS NOT NULL\n\tAND s.task_id = ANY({{ MultiSelectTasks.selectedOptionValues || 1 }}::integer[])\n\tAND s.version_id = {{SelectVersion.selectedOptionValue}}\n),\n\ntask_stats AS (\n  -- Task-Statistiken\n  SELECT \n    task_id,\n    task_name,\n    COUNT(DISTINCT employee_id) as unique_employees,\n    COUNT(*) as total_bookings,\n    ROUND(AVG(duration_minutes), 0) as avg_duration,\n    ROUND(SUM(duration_minutes) / 60.0, 2) as total_hours\n  FROM task_assignments \n  WHERE employee_id IS NOT NULL\n  GROUP BY task_id, task_name\n)\n\n-- ✅ HAUPTQUERY: Task-Matrix mit einfachen Farben\nSELECT \n  ta.task_name as \"Task\",\n  \n  -- ✅ WOCHENTAGE (nur Inhalte)\n  STRING_AGG(\n    CASE WHEN ta.day_abbrev = 'Mo' THEN ta.employee_with_time END, \n    CHR(10)\n  ) as \"Mo\",\n  \n  STRING_AGG(\n    CASE WHEN ta.day_abbrev = 'Di' THEN ta.employee_with_time END, \n    CHR(10)\n  ) as \"Di\",\n  \n  STRING_AGG(\n    CASE WHEN ta.day_abbrev = 'Mi' THEN ta.employee_with_time END, \n    CHR(10)\n  ) as \"Mi\",\n  \n  STRING_AGG(\n    CASE WHEN ta.day_abbrev = 'Do' THEN ta.employee_with_time END, \n    CHR(10)\n  ) as \"Do\",\n  \n  STRING_AGG(\n    CASE WHEN ta.day_abbrev = 'Fr' THEN ta.employee_with_time END, \n    CHR(10)\n  ) as \"Fr\",\n  \n  -- ✅ EINFACHE FARBPALETTE\n  tc.background_color as \"BackgroundColor\",  -- Direkt aus tasks.color\n  tc.text_color as \"TextColor\",              -- Berechnet basierend auf Hintergrund\n  \n  -- ✅ STATISTIKEN\n  COALESCE(ts.total_hours, 0) as \"Stunden_Gesamt\",\n  COALESCE(ts.total_bookings, 0) as \"Buchungen_Anzahl\",\n  COALESCE(ts.unique_employees, 0) as \"Mitarbeiter_Anzahl\"\n\nFROM task_assignments ta\nLEFT JOIN task_colors tc ON ta.task_id = tc.task_id\nLEFT JOIN task_stats ts ON ta.task_id = ts.task_id\nGROUP BY \n  ta.task_name, \n  tc.background_color, \n  tc.text_color,\n  ts.total_hours,\n  ts.total_bookings,\n  ts.unique_employees\nORDER BY ta.task_name;",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ],
      "timeoutInMillisecond": 10000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "PhysioPlanung_DEV",
      "isAutoGenerated": false,
      "name": "PhysioPlanung_DEV",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "name": "getTaskMatrix",
    "pageId": "Reporting",
    "runBehaviour": "ON_PAGE_LOAD",
    "userSetOnLoad": false
  }
}